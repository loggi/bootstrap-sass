@import "../../../assets/stylesheets/bootstrap/mixins";

@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder {
    color: $color;
  }
  // Firefox 4-18
  &::-moz-placeholder {
    color: $color;
  }
  // Firefox 19+
  &:-ms-input-placeholder {
    color: $color;
  }
  // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: $color;
  }
  // Safari and Chrome
  &.placeholder {
    color: $color;
    @content;
  }
}

@mixin image-block($file, $width: true, $height: true) {
  background-image: image-url($file);
  @if $width {
    width: image-width($file);
  }
  @if $height {
    height: image-height($file);
  }
}

@mixin input-height($height) {
  height: $height;
  line-height: $height;
}

@mixin font-everything {
  background-color: $input-bg;
  border: none;
  // modified - using
  border: 1px solid $input-border;
  color: $gray-darker;
  height: $input-height-base;
  line-height: $line-height-base;
  // @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  // @include transition(border linear .2s, box-shadow linear .2s);
  // Focus state
  &:focus {
    border-color: rgba(82, 168, 236, 0.8);
    outline: 0;
    // outline: thin dotted \9; /* IE6-9
    // @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6));

  }
}

@mixin all-inputs {
  textarea,
  input[type="text"],
  input[type="password"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="date"],
  input[type="month"],
  input[type="time"],
  input[type="week"],
  input[type="number"],
  input[type="email"],
  input[type="url"],
  input[type="search"],
  input[type="tel"],
  input[type="color"],
  .uneditable-input,
  select {
    @content;
  }
}

@mixin absolute-fit($edge: 0) {
  position: absolute;
  top: $edge;
  right: $edge;
  bottom: $edge;
  left: $edge;
}

// Retina images mixin
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: contain;
  }
}

// absolute and fixed mixins
@mixin position($t,$l,$b,$r){
  @if $t!= false {
    top: $t;
  }
  @if $l!= false {
    left: $l;
  }
  @if $b!= false {
    bottom: $b;
  }
  @if $r!= false {
    right: $r;
  }
}
@mixin absolute($top:false,$left:false,$bottom:false,$right:false) {
  position: absolute;
  @include position($top,$left,$bottom,$right);
}
@mixin fixed($top:false,$left:false,$bottom:false,$right:false) {
  position: fixed;
  @include position($top,$left,$bottom,$right);
}

// Chevron (tirangle/arrow) mixin
@mixin chevron($width, $height, $skew, $color, $direction: 'up') {
  position: relative;
  width: $width;
  height: $height;

  @if $direction == 'up' {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  } @else if $direction == 'down' {
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    transform: rotate(180deg);
  } @else if $direction == 'left' {
    -webkit-transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    -o-transform: rotate(-90deg);
    transform: rotate(-90deg);
  } @else if $direction == 'right' {
    -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    -o-transform: rotate(90deg);
    transform: rotate(90deg);
  } @else {
    @warn "Direction must be one of `up`, `right`, `down` or `left`; currently `#{$direction}`.";
  }

  &:before, &:after {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    background: $color;
    content: '';
  }
  &:before {
    left: 0;
    -webkit-transform: skew(0deg, $skew);
    -moz-transform: skew(0deg, $skew);
    -ms-transform: skew(0deg, $skew);
    -o-transform: skew(0deg, $skew);
    transform: skew(0deg, $skew);
  }
  &:after {
    right: 0;
    -webkit-transform: skew(0deg, -$skew);
    -moz-transform: skew(0deg, -$skew);
    -ms-transform: skew(0deg, -$skew);
    -o-transform: skew(0deg, -$skew);
    transform: skew(0deg, -$skew);
  }
}